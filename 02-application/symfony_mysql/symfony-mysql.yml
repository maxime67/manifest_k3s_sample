# -------------------- SECRETS --------------------
apiVersion: v1
kind: Secret
metadata:
  name: symfony-secrets
type: Opaque
data:
  database-url: bXlzcWw6Ly91c2VyOnBhc3N3b3JkQG15c3FsLXNlcnZpY2U6MzMwNi9teV9kYXRhYmFzZQ==
  app-secret: YWJjZGVmZ2hpams2bG1ub3BxcnN0dXZ3eHl6MTIzNDU2Nzg5MA==
  database_password: cGFzc3dvcmQ=
  database_username: dXNlcg==
  database_name: bXlfZGF0YWJhc2U=

---
# -------------------- AUTOSCALE --------------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: symfony-autoscale
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: symfony-app
  minReplicas: 2
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
# -------------------- PERSISTENT VOLUME CLAIM --------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# -------------------- DÉPLOIEMENT MYSQL --------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database_password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database_username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database_password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database_name
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
          readinessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc

---
# -------------------- SERVICE MYSQL --------------------
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP

---
# -------------------- JOB MIGRATIONS --------------------
apiVersion: batch/v1
kind: Job
metadata:
  name: symfony-migrations-job
  annotations:
    # Annotation pour forcer la re-création du Job à chaque déploiement
    argocd.argoproj.io/sync-options: Replace=true
  labels:
    app: symfony-migrations-job
spec:
  selector:
    matchLabels:
      app: symfony-migrations-job
  template:
    spec:
      restartPolicy: OnFailure
      initContainers:
        # Attendre que MySQL soit prêt
        - name: wait-for-mysql
          image: mysql:latest
          command:
            - sh
            - -c
            - |
              until mysqladmin ping -h mysql-service -u root -p$MYSQL_ROOT_PASSWORD --silent; do
                echo "Waiting for MySQL..."
                sleep 2
              done
              echo "MySQL is ready!"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database_password
      containers:
        - name: symfony-migrations
          image: maxxa/k3s:latest
          command:
            - sh
            - -c
            - |
              echo "Starting Symfony migrations..."
              php bin/console doctrine:database:create --if-not-exists
              php bin/console doctrine:migrations:migrate --no-interaction
              echo "Migrations completed successfully!"
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database-url
            - name: APP_ENV
              value: "prod"
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: app-secret
          workingDir: /var/www/html

---
# -------------------- DEPLOIEMENT SYMFONY --------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: symfony-app
  labels:
    app: symfony-app
spec:
#  replicas: 2
  selector:
    matchLabels:
      app: symfony-app
  template:
    metadata:
      labels:
        app: symfony-app
    spec:
      # PLUS BESOIN des initContainers pour les migrations !
      initContainers:
        # Garder seulement l'attente de MySQL
        - name: wait-for-mysql
          image: mysql:latest
          command:
            - sh
            - -c
            - |
              until mysqladmin ping -h mysql-service -u root -p$MYSQL_ROOT_PASSWORD --silent; do
                echo "Waiting for MySQL..."
                sleep 2
              done
              echo "MySQL is ready!"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database_password
      containers:
        - name: symfony-app
          image: maxxa/k3s:latest
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: database-url
            - name: APP_ENV
              value: "prod"
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: symfony-secrets
                  key: app-secret
          livenessProbe:
            httpGet:
              path: /article
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /article
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi

---
# -------------------- SERVICE SYMFONY --------------------
apiVersion: v1
kind: Service
metadata:
  name: symfony-service
spec:
  selector:
    app: symfony-app
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
  type: NodePort