{{/* Déploiement MYSQL */}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: mysql
          {{- if .Values.securityContext_pod }}
          securityContext:
            {{- toYaml .Values.securityContext_pod | nindent 10 }}
          {{- end }}
          image: {{ .Values.mysql.image }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: db-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: db-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: db-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: db-name
          {{- if $.Values.resources }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mysql-pvc
---

---
{{/* Déploiement Symfony */}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-symfony
spec:
  replicas: {{ .Values.symfony.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-symfony
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-symfony
    spec:
    {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
    {{- end }}
      containers:
        - name: symfony
          {{- if .Values.securityContext_pod }}
          securityContext:
             {{- toYaml .Values.securityContext_pod | nindent 10 }}
          {{- end }}
          image: {{ .Values.symfony.image }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: database-url
          {{- if $.Values.resources }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
           {{- end }}
          livenessProbe:
            httpGet:
              path: /article
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /article
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3